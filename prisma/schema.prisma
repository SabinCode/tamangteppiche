// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(uuid())
  name String 
  description String?
  brand String?
  size String?
  color String?
  slug String? @unique
  stock Int? 
  onSale Boolean?
  newPrice Int?
  oldPrice Int?
  discount Int?
  price Int? 
  rating Int?  
  images String[] // To store multiple images URLs
  image String?  // To store a single image URL(Could be the main image)
  category String?
  quantity Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order Order[]

  downloadVerifications  DownloadVerification[]
  discountCodes          DiscountCode[]
}

enum Role {
  USER
  ADMIN
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  role String @default("USER")
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int

  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

   discountCodeId String?
  discountCode   DiscountCode? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
}

model DiscountCode {
  id             String           @id @default(uuid())
  code           String           @unique
  discountAmount Int
  discountType   DiscountCodeType
  uses           Int              @default(0)
  isActive       Boolean          @default(true)
  allProducts    Boolean          @default(false)
  createdAt      DateTime         @default(now())
  limit          Int?
  expiresAt      DateTime?

  products Product[]
  orders   Order[]
}

enum DiscountCodeType {
  PERCENTAGE
  FIXED
}

model DownloadVerification {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}